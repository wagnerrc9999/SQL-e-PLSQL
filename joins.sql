DELETE DEPARTAMENTO
WHERE COD_DEPTO = 'T'

 minimo e maximo de um coisa

SELECT *
FROM FUNCIONARIO F
WHERE F.DATA_ADMISSAO_FUNC = (SELECT MIN(FD.DATA_ADMISSAO_FUNC)
FROM FUNCIONARIO FD)

 soma, ordenado pelo nome do cargo

SELECT C.COD_CARGO, C.TITULO_CARGO, 
COUNT(F.COD_FUNC), SUM(C.SALARIO_CARGO)
FROM CARGO C
LEFT JOIN FUNCIONARIO F
ON F.COD_CARGO = C.COD_CARGO
GROUP BY C.COD_CARGO, C.TITULO_CARGO
ORDER BY C.TITULO_CARGO

  total por departamento de salario gasto, com funcionairos da empresa.

SELECT F.COD_DEPTO, SUM(C.SALARIO_CARGO)
FROM CARGO C
INNER JOIN FUNCIONARIO F
ON F.COD_CARGO = C.COD_CARGO
GROUP BY F.COD_DEPTO
[SQL: RESOLUCAO 02]
SELECT F.COD_DEPTO, SUM(C.SALARIO_CARGO)
FROM CARGO C, FUNCIONARIO F
WHERE F.COD_CARGO = C.COD_CARGO
GROUP BY F.COD_DEPTO

 com menos de 4 funcionarios.

SELECT D.COD_DEPTO, D.NOME_DEPTO,
 COUNT(F.COD_FUNC)
FROM DEPARTAMENTO D, FUNCIONARIO F
WHERE F.COD_DEPTO = D.COD_DEPTO
GROUP BY D.COD_DEPTO, D.NOME_DEPTO
HAVING COUNT(F.COD_FUNC) < 4
ORDER BY D.NOME_DEPTO

 Quais os 3 (três) ANALISTAS mais velhos (data de admissão) na empresa.

SELECT *
FROM FUNCIONARIO
ORDER BY DATA_ADMISSAO_FUNC
FETCH FIRST 3 ROWS ONLY

  Qual o nome do gerente de 
cada funcionário? Liste os 
nomes dos funcionários, seguidos pelo nome do respectivo
gerente (use um "alias" 
significativo para esta 
coluna) e pelo nome do 
departamento. Ordene pelos nomes dos
departamentos e pelos nomes dos funcionários.



SELECT F.NOME_FUNC, GER.NOME_FUNC AS GERENTE, D.NOME_DEPTO
FROM FUNCIONARIO F
INNER JOIN DEPARTAMENTO D
ON D.COD_DEPTO = F.COD_DEPTO
INNER JOIN FUNCIONARIO GER
ON GER.COD_FUNC = D.COD_GERENTE_DEPTO
ORDER BY D.NOME_DEPTO, F.NOME_FUNC

 Faça uma consulta que liste os 
funcionários, nomes dos departamentos 
e seus salários reajustados em 7% (sete
por cento). Ordene pelo nome dos funcionários.

aumento de 7%


SELECT F.COD_FUNC, F.NOME_FUNC, D.NOME_DEPTO,
(C.SALARIO_CARGO * 1.07) AS SALARIO_REAJUSTADO
FROM FUNCIONARIO F, DEPARTAMENTO D, CARGO C
WHERE D.COD_DEPTO = F.COD_DEPTO
AND C.COD_CARGO = F.COD_CARGO
ORDER BY F.NOME_FUNC


 Qual a média de salário dos funcionários contratados a partir do ano 2000?

SELECT
TO_CHAR(F.DATA_ADMISSAO_FUNC, 'YYYY')
 AS ANO_ADMISSAO,
AVG(C.SALARIO_CARGO)
 AS MEDIA_SALARIO
FROM FUNCIONARIO F
JOIN CARGO C
ON C.COD_CARGO = F.COD_CARGO
WHERE F.DATA_ADMISSAO_FUNC >=
 TO_DATE('01/01/2000','DD/MM/YYYY')
GROUP BY TO_CHAR(F.DATA_ADMISSAO_FUNC, 'YYYY')
ORDER BY ANO_ADMISSAO


10  Listar os departamentos e a média, em anos, de tempo de empresa dos respectivos funcionários.

SELECT
D.COD_DEPTO,
D.NOME_DEPTO,
ROUND( AVG( SYSDATE - 
F.DATA_ADMISSAO_FUNC ) / 365, 1 )
 AS MEDIA_ANOS_EMPRESA
FROM DEPARTAMENTO D
LEFT JOIN FUNCIONARIO F ON F.COD_DEPTO = D.COD_DEPTO
GROUP BY D.COD_DEPTO, D.NOME_DEPTO
ORDER BY D.COD_DEPTO



criação de tabelas

CREATE TABLE ESPECIALIDADE (
 COD_ESPEC NUMBER(3) CONSTRAINT 
PK_ESP_COD PRIMARY KEY,
 NOME VARCHAR2(30) CONSTRAINT 
NN_ESP_NOM NOT NULL,
 OBS VARCHAR2(100)
);

CREATE TABLE CONVENIO (
 COD_CONV VARCHAR2(6) CONSTRAINT
 PK_CNV_COD PRIMARY KEY,
 NOME VARCHAR2(20) CONSTRAINT
 NN_CNV_NOM NOT NULL,
 STATUS NUMBER(1) CONSTRAINT
 CK_CNV_STA CHECK(STATUS IN (0, 1, 2))
);

CREATE TABLE MEDICO (
 COD_MED NUMBER(4) CONSTRAINT
 PK_MED_COD PRIMARY KEY,
 NOME VARCHAR2(50) CONSTRAINT 
NN_MED_NOM NOT NULL,
 TITULO VARCHAR2(10),
 CRM NUMBER(6),
 UF_CRM VARCHAR2(2),
 DT_CADAS DATE DEFAULT SYSDATE,
 COD_ESPEC NUMBER(3) CONSTRAINT
 NN_MED_CODESP NOT NULL
 CONSTRAINT FK_MED_CODESP_ESP_COD
 REFERENCES ESPECIALIDADE(COD_ESPEC),
 CONSTRAINT UK_MED_CRM UNIQUE (CRM, UF_CRM)
);

CREATE TABLE PACIENTE (
 COD_PAC NUMBER(7) CONSTRAINT
 PK_PAC_COD PRIMARY KEY,
 NOME VARCHAR2(50) CONSTRAINT
 NN_PAC_NOM NOT NULL,
 DT_NASC DATE CONSTRAINT
 NN_PAC_DATNSC NOT NULL,
 SEXO CHAR(1) CONSTRAINT
 NN_PAC_SEX NOT NULL
 CONSTRAINT CK_PAC_SEX 
CHECK(SEXO IN ('F','M')),
 COD_CONV VARCHAR2(6) CONSTRAINT 
FK_PAC_COD_CNV_COD REFERENCES CONVENIO(COD_CONV),
 HISTORICO VARCHAR2(4000)
);

CREATE TABLE ATENDIMENTO (
 COD_PAC NUMBER(7),
 COD_MED NUMBER(4),
 DT_ATEND DATE,
 DT_RETORNO DATE,
 PRECO NUMBER(7,2) CONSTRAINT
 CK_ATD_PRE CHECK(PRECO>=0),
 OBS VARCHAR2(500),
 CONSTRAINT PK_ATD_CODPACMEDDATATD
 PRIMARY KEY(COD_PAC, COD_MED, DT_ATEND),
 CONSTRAINT FK_ATD_CODPAC_PAC_COD
 FOREIGN KEY(COD_PAC) REFERENCES PACIENTE(COD_PAC),
 CONSTRAINT FK_ATD_CODMED_MED_COD
 FOREIGN KEY(COD_MED) REFERENCES MEDICO(COD_MED)
);





ALTER TABLE ESPECIALIDADE
 DROP COLUMN OBS;
 
ALTER TABLE CONVENIO
MODIFY COD_CONV VARCHAR2(3);

ALTER TABLE MEDICO
ADD CONSTRAINT CK_MED_TIT CHECK (TITULO IN('DR', 'DRA'));

ALTER TABLE PACIENTE
ADD DT_CADAS DATE DEFAULT SYSDATE;

ALTER TABLE ATENDIMENTO
MODIFY DT_RETORNO CONSTRAINT NN_ATD_DT_RET NOT NULL;



SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE
  FROM USER_CONSTRAINTS
 WHERE TABLE_NAME IN ('MEDICO', 'PACIENTE',
 'ATENDIMENTO', 'ESPECIALIDADE', 'CONVENIO');
 
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE
  FROM USER_TAB_COLUMNS
 WHERE TABLE_NAME IN ('MEDICO', 'PACIENTE', 
'ATENDIMENTO', 'ESPECIALIDADE', 'CONVENIO');
 
SELECT OBJECT_NAME, OBJECT_TYPE
  FROM USER_OBJECTS;



